mixin _toolsYesNoMixin(field)
  if field.caption
    p.py1.-caption.-fw-600.-text-1!= field.caption

  p.-fw-600.mb1= field.label

  - var _checked = field.default !== undefined ? field.default : null
  if _formData[field.name]
    - _checked = _formData[field.name]
  .form-check.form-check-inline
    input(
      type="radio"
      name=`fieldValues[${field.name}]`
      id=`${field.name}-yes`
      value="yes"
      checked= _checked === 'yes'
      aria-label= 'Yes'
      data-name= field.name
      data-hidden= field.hidden && field.hidden.toString()
      data-default= '' + field.default
      data-partial-toggle-radio= field.toggle
      data-toggle-radio= field.yesno && field.yesno.toString()
      data-alert!= field.alert
      data-confirm!= field.confirm
    )&attributes(field.attributes)
    label.form-check-label(for=`${field.name}-yes`) Yes

  .form-check.form-check-inline
    input(
      type="radio"
      name=`fieldValues[${field.name}]`
      id=`${field.name}-no`
      value="no"
      checked= _checked === 'no'
      aria-label= 'No'
      data-name= field.name
      data-hidden= field.hidden && field.hidden.toString()
      data-default= field.default
      data-partial-toggle-radio= field.toggle
      data-toggle-radio= field.yesno && field.yesno.toString()
      data-alert!= field.alert
      data-confirm!= field.confirm
    )&attributes(field.attributes)
    label.form-check-label(for=`${field.name}-no`) No


mixin toolsFormElementMixin(field, index)
  .col.col-12.pb2.pr1(class=field.columnClassName)
    case field.type
      when 'dropdown'
        label.inline-block.pb1.-fw-600= field.label
        if field.multiple
          select.form-control.-multiple.-fw(
            name=`fieldValues[${field.name}]`
            multiple= field.multiple
            data-name= field.name
            aria-label= field.label
            data-hidden= field.hidden && field.hidden.toString()
          )&attributes(field.attributes)
            each option in field.options
              option(
                value= option
                selected!= _formData[field.name] && _formData[field.name].includes(option)
              )= option
        else
          select.-fw.form-control(
            name=`fieldValues[${field.name}]`
            aria-label= field.label
            data-name= field.name
            data-hidden= field.hidden && field.hidden.toString()
          )&attributes(field.attributes)
            option(value="") Choose an option
            each option in field.options
              option(
                value= option
                selected!= _formData[field.name] === option
              )= option
        p.-on-error.-danger.-caption.-fw-500.mt1

      when 'date'
        label.inline-block.pb1.-fw-600= field.label
        input.form-control.date-form-control.-fw(
          type="date"
          name=`fieldValues[${field.name}]`
          value=_formData[field.name]
          aria-label= field.label
          data-name=field.name
          data-hidden= field.hidden && field.hidden.toString()
        )&attributes(field.attributes)
        p.-on-error.-danger.-caption.-fw-500.mt1

      when 'yesno'
        +_toolsYesNoMixin(field)
        p.-on-error.-danger.-caption.-fw-500.mt1

      when 'text'
        label.inline-block.pb1.-fw-600= field.label
        textarea.form-control.block.-fw(
          name=`fieldValues[${field.name}]`
          value=_formData[field.name]
          aria-label= field.label
          data-name=field.name
          data-hidden= field.hidden && field.hidden.toString()
        )&attributes(field.attributes)= _formData[field.name]
        p.-on-error.-danger.-caption.-fw-500.mt1

      when 'checkbox'
        .-ff-sec.form-check.form-check-inline
          input.form-check-input.mr1(
            type="checkbox"
            name=`fieldValues[${field.name}]`
            id= field.name + field.attributes.value
            checked= Array.isArray(_formData[field.name]) ? _formData[field.name].includes(field.attributes.value) : _formData[field.name]
            value='yes'
            aria-label= field.label
            data-name=field.name
            data-hidden= field.hidden && field.hidden.toString()
          )&attributes(field.attributes)
          label(for= field.name + field.attributes.value).mr3 !{field.label}
        p.-on-error.-danger.-caption.-fw-500.mt1

      when 'radio'
        input(
          type="radio"
          name=`fieldValues[${field.name}]`
          id=`${field.name}-${field.value}`
          value=`${field.value}`
          checked= _formData && _formData[field.name] === field.value
          aria-label= field.label
          data-name= field.name
        )
        label.pl1.mr3.-ff-sec(for=`${field.name}-${field.value}`)!= field.label
        p.-on-error.-danger.-caption.-fw-500.mt1

      when 'mountable'
      when 'group'
        fieldset.pb1
          if field.title
            h4= field.title

          if field.subtitle
            h5.-fw-600= field.subtitle

          if field.text
            div.pb2!= field.text

          if field.yesno
            +_toolsYesNoMixin(field)

          if field.type === 'mountable'
            div(id= field.name)
          else
            .clearfix.mxn2
            fieldset(style='width:100%')
              each row2 in field.fields
                .clearfix.mxn2
                  each field2 in row2
                    +toolsFormElementMixin(field2)

      default
        label.inline-block.pb1.-fw-600= field.label
        input.form-control.-fw(
          type="text"
          name=`fieldValues[${field.name}]`
          value=_formData[field.name]
          data-name=field.name
          aria-label= field.label
          data-hidden= field.hidden && field.hidden.toString()
        )&attributes(field.attributes)
        p.-on-error.-danger.-caption.-fw-500.mt1

    if field.subLabel
      p.pt1.-caption.-fw-600.-text-1= field.subLabel
