image: node:latest

before_script:
# install ssh-agent
- 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
# run ssh-agent
- eval $(ssh-agent -s)
# add ssh key stored in SSH_PRIVATE_KEY variable to the agent store
- ssh-add <(echo "$SSH_PRIVATE_KEY")
- mkdir -p ~/.ssh
# - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config

variables:
  REDIS_HOST: "redis"
  POSTGRES_HOST: "postgres"
  POSTGRES_USER: "postgres"

stages:
  - test
  - deploy

test:
  stage: test
  services:
    - redis:latest
    - postgres:latest
  before_script:
    - cp config/config.sample.js config/config.js
    - cp config/knexfile.sample.js knexfile.js
    - apt-get update
    - apt-get install -y postgresql-client
  script:
    - yarn global add node-gyp
    - yarn
    - yarn build
    - yarn test
    - yarn report

deploy_staging:
  stage: deploy
  before_script:
    - npm install pm2 -g
  script:
    - mkdir $HOME/.ssh
    - chmod 700 $HOME/.ssh
    # Staging as well as production are behing ELBs
    # ELBs don't forward things like ssh (for security reasons)
    # We are using a non standard port and an Elastic IP for this instead
    - ssh-keyscan -H -p 12345 34.212.243.114 >> $HOME/.ssh/known_hosts
    - ssh-keyscan -H 'gitlab.com' >> $HOME/.ssh/known_hosts
    - pm2 deploy ecosystem.json staging
  environment: staging
  only:
    - master
