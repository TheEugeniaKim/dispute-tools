-
  var _menuItemsData = {
    always: [
      {
        text: 'Dispute Your Debt',
        title: 'Browse Our Tools and Services',
        url: routeMappings.DisputeTools.url(),
      },
      {
        text: 'Donate',
        title: 'Contribute to the action fund',
        className: 'js-donate',
        url: '#',
      },
    ],
    loggedOut: [
      //- {
      //-   text: 'Join Us',
      //-   title: 'Join Us',
      //-   url: routeMappings.signup.url(),
      //-   className: 'js-signup-link -primary',
      //-   parentClassName: 'px2 pl4'
      //- },
      //- {
      //-   text: 'Log In',
      //-   title: 'Log In',
      //-   url: routeMappings.login.url(),
      //-   className: 'js-login-link',
      //-   parentClassName: 'pl2'
      //- },
    ],
    loggedIn: [],
    admin: [],
  }

  if (currentUser && currentUser.role === 'Admin') {
    _menuItemsData.admin = _menuItemsData.admin.concat([
      {
        text: 'Disputes',
        url: routeMappings.Admin.Disputes.url(),
      },
    ]);
  }

mixin _linkMixin(item, responsive = false)
  - var _className = 'Header__link -fw-700 -fh'
  if responsive
    - _className = 'ResponsiveMenu__link -fw-700 block'
  if (item.url === currentURL) || (currentURL.startsWith(item.url))
    - _className += ' active'
  if item.url === '/dispute-tools' && currentURL.startsWith('/disputes')
    - _className += ' active'
  - _className = _className + (item.className ? ' ' + item.className : '')
  a(href!=item.url, class=_className, title=item.title || item.text)&attributes(attributes)
    block
    | #{item.text}

mixin _logoutMixin
  form(method='post' action=routeMappings.logout.url())
    input(type='hidden' name='_csrf' value=csrfToken)
    input(type='hidden' name='_method' value='DELETE')
    button(type='submit')&attributes(attributes) Logout

mixin _responsiveMenuMixin
  ul.list-reset.pt1.center
    each item in _menuItemsData.always
      li: +_linkMixin(item, true)(class='px2 py1')

    unless currentUser
      each item in _menuItemsData.loggedOut
        li: +_linkMixin(item, true)(class='px2 py1')
    else
      each item in _menuItemsData.loggedIn
        li: +_linkMixin(item, true)(class='px2 py1')
      each item in _menuItemsData.admin
        li: +_linkMixin(item, true)(class='px2 py1')
          svg.mr1.align-middle(width='18' height='11'): use(xlink:href='#svg-key')
      li: +_logoutMixin(class='ResponsiveMenu__link center btn-clear px2 py1 left-align -fw -fw-700')

mixin _defaultMenuMixin
  ul.list-reset.-fh.sm-hide.xs-hide
    each item in _menuItemsData.always
      li.inline-block.align-top.px2.-fh(class= item.parentClassName)
        .table.-fh
          +_linkMixin(item)(class='table-cell align-middle')
    unless currentUser
      each item in _menuItemsData.loggedOut
        li.inline-block.align-top.-fh(class= item.parentClassName)
          .table.-fh
            +_linkMixin(item)(class= item.className class='table-cell align-middle')
    else
      li.inline-block.align-middle.-fh.pl2
        .table.-fh
          .table-cell.align-middle.Dropdown.-right.-has-dropdown(data-component-dropdown)
            button.Dropdown__head.-fw-700
              span.Dropdown__label.inline-block.align-middle.-ell
                if _menuItemsData.admin.length
                  svg.mr1(width='18' height='11'): use(xlink:href='#svg-key')
                | #{currentUser.account.fullname}
            ul.Dropdown__body(aria-hidden='true' aria-label='submenu')
              each item in _menuItemsData.loggedIn
                li: a.Header__dropdown-item(href=item.url role='button' tabindex='0')= item.text
              each item, index in _menuItemsData.admin
                if index === 0
                  li.-separator
                li: a.Header__dropdown-item(href=item.url role='button' tabindex='0')
                  svg.mr1(width='18' height='11'): use(xlink:href='#svg-key')
                  | #{item.text}
              li.-separator
              li: +_logoutMixin(class='Header__dropdown-item')

  ul.list-reset.-fh.md-hide.lg-hide
    li: button.js-hamburger-menu.-white.-k-btn.btn-link(style='padding: 13px 0 13px 16px;')
      svg(viewBox='0 0 32 32' width='32' height='32' fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='6.25%')
        path(d='M4 8 L28 8 M4 16 L28 16 M4 24 L28 24')
      span.sr-only Toogle navigation

mixin mixinHeaderNav(responsive)
  if responsive
    +_responsiveMenuMixin
  else
    +_defaultMenuMixin
